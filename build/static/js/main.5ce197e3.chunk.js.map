{"version":3,"sources":["scripts/spotifySearch.js","scripts/BfsArtist.js","components/Header.jsx","images/trex.jpg","images/um.png","images/network.jpg","images/colors.png","images/cat.jpg","scripts/Projects.js","components/ProjectSquare.jsx","components/ProjectSelector.jsx","pages/MainPage.jsx","scripts/useInterval.js","pages/ColorAnimation.jsx","images/headshot.jpeg","components/HeadshotFrame.jsx","images/resume.pdf","pages/About.jsx","scripts/generator.js","pages/FarmNameGenerator.jsx","components/explorer/Artist.jsx","components/explorer/Playlist.jsx","components/explorer/Traverser.jsx","components/explorer/Input.jsx","components/explorer/ArtistExplorer.jsx","components/explorer/About.jsx","components/explorer/Nav.jsx","pages/ExplorerContainer.jsx","App.js","index.js"],"names":["authorize","Promise","resolve","reject","fetch","method","headers","Buffer","from","toString","body","URLSearchParams","grant_type","then","response","json","data","catch","e","searchRelated","start","end","api","setCurrent","a","tbd","BfsArtist","visited","curr","isIn","id","length","shift","push","getAllRelateds","forEach","related","foundEnd","find","elmt","path","getPredecessors","reverse","artist","getArtistRelatedArtists","artists","map","newArtist","generateSongList","artistList","songList","i","getArtistTopTracks","topTracks","tracks","err","list","findIndex","generatePlaylist","token","SpotifyWebApi","setAccessToken","getMe","user","createPlaylist","name","public","collaborative","description","playlist","addTracksToPlaylist","songId","generateToken","authCode","code","redirect_uri","res","prev","prevCollab","this","preds","concat","Header","selected","href","className","projectConstructor","types","url","image","PROJECTS","network","trex","um","colors","cat","ProjectSquare","project","src","alt","BUTTONS","ProjectSelector","useState","projects","setProjects","buttons","setButtons","selectorButton","type","onClick","filter","includes","toLowerCase","button","MainPage","window","location","search","to","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","ColorAnimation","makeGradient","gradient","r","g","b","backgroundImage","Array","fill","setColors","setGradient","rgbIncs","setIncs","frameRule","setFrameRule","running","setRunning","newColors","Object","assign","shiftColors","updatedIncs","entries","key","incrementLastColor","style","background","HeadshotFrame","headshot","About","domain","resume","download","adjective","first_word","second_word","farm_type","add_word","farm_name","word_source_a","Math","floor","random","generateFarmName","FarmNameGenerator","farmName","setFarmName","Artist","artistInfo","images","songListReducer","Playlist","requestURL","reduce","join","Traverser","startName","endName","setToken","setStart","setEnd","middle","setMiddle","currentRef","setSongList","message","setMessage","access_token","searchArtists","items","alert","setTimeout","runSearch","runSongListGeneration","slice","Input","setStartName","setEndName","beginSearching","placeholder","onChange","target","value","query","substring","split","initial","item","parts","decodeURIComponent","ArtistExplorer","setCode","searching","setSearching","playlistID","setPlaylistID","state","console","log","rel","Nav","clickHandler","ExplorerContainer","page","setPage","GetPage","trackString","App","basename","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ce197e3.chunk.js","sourcesContent":["import BfsArtist from './BfsArtist'\nimport SpotifyWebApi from 'spotify-web-api-js'\n\n\n//returns an app authorization token \nexport const authorize = () => {\n    return new Promise((resolve, reject) => {\n        const data = { grant_type: 'client_credentials' };\n        fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Basic ' + Buffer.from('d4c2fd522b164d169533cc916f7c5d27:fcd4680273bc464ab3524d0ce93bf654').toString('base64'),\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: new URLSearchParams(data)\n        }).then((response) =>\n            response.json().then((data) =>\n                resolve(data)\n            )\n        ).catch((e) =>\n            reject(e)\n        );\n    })\n}\n\n\n//performs a BFS to find a path from the 'start' artist to the 'end' artist\n//using related artists as neighbors. Returns an array of artists from start to end.\nexport const searchRelated = async(start, end, api, setCurrent) => {\n    let tbd = [new BfsArtist(start, null, null)];\n    let visited = [];\n    let curr = null;\n    while (!isIn(end.id, tbd) && tbd.length > 0) {\n        curr = tbd.shift();\n        setCurrent(curr);\n        visited.push(curr);\n        let newRelateds = await getAllRelateds(curr, api);\n        newRelateds.forEach((related) => {\n            if (!isIn(related.id, tbd) && !isIn(related.id, visited)) {\n                tbd.push(related);\n            }\n        })\n    }\n\n    const foundEnd = tbd.find((elmt) => elmt.id === end.id);\n\n    const path = foundEnd.getPredecessors();\n\n    setCurrent(null);\n    return path.reverse();\n}\n\n\n//return the related artists of an artist(both in BfsArtist format) when resolved\nconst getAllRelateds = (artist, api) => {\n    return new Promise((resolve, reject) => {\n        api.getArtistRelatedArtists(artist.id)\n            .then((response) => {\n                resolve(response.artists.map(newArtist => {\n                    return new BfsArtist(newArtist, artist, null);\n                }));\n            })\n    })\n}\n\n\n//perform BFS of artists who collaborated on songs\n//deprecated/replaced with searchRelateds\nexport const searchCollabs = async(start, end, api) => {\n    let tbd = [new BfsArtist(start, null, null)];\n    let visited = [];\n    let curr = null;\n\n    while (!isIn(end.id, tbd) && tbd.length > 0) {\n        curr = tbd.shift();\n        visited.push(curr);\n        let newCollabs = await getAllCollaborators(curr, api);\n        newCollabs.forEach((collab) => {\n            if (!isIn(collab.id, tbd) && !isIn(collab.id, visited)) {\n                tbd.push(collab);\n            }\n        })\n    }\n    const foundEnd = tbd.find((elmt) => elmt.id === end.id);\n    const path = foundEnd.getPredecessors();\n    return path\n}\n\n\n// given an artist and authorized api, returns a set of artists who have collaborated on songs with the original artist\n// deprecated/replaced with getAllRelateds\nconst getAllCollaborators = (artist, api) => {\n    return new Promise((resolve, reject) => {\n        let collaborators = [];\n        api.getArtistAlbums(artist.id)\n            .then((albums) => {\n                let promises = [];\n                albums.items.forEach(album => {\n                    promises.push(getAlbumCollaborators(artist, album, api)\n                        .then((albumCollaborators) => {\n                            albumCollaborators.forEach(collab => {\n                                if (!isIn(collab.id, collaborators)) {\n                                    collaborators.push(collab);\n                                }\n                            })\n                        })\n                    )\n                })\n                Promise.all(promises).then((data) => {\n                    resolve(collaborators)\n                });\n            })\n            .catch((err) => reject(err));\n    })\n}\n\n\n//given an artist and album, returns a list of unique artists who also wrote songs on the album\nconst getAlbumCollaborators = (artist, album, api) => {\n    return new Promise((resolve, reject) => {\n        let collaborators = [];\n        api.getAlbumTracks(album.id)\n            .then((tracks) => {\n                tracks.items.forEach((track) => {\n                    if (track.artists.length > 1) {\n                        track.artists.forEach((newArtist) => {\n                            if (!isIn(newArtist.id, collaborators) && newArtist.id !== artist.id) {\n                                collaborators.push(new BfsArtist(newArtist, artist, track));\n                            }\n                        })\n                    }\n                })\n                resolve(collaborators);\n            })\n            .catch((err) => reject(err));\n    })\n}\n\n\n//given a list of artists in BfsArtist format and an authorized api\n//returns an array of spotify song objects (one per artist in the same order)\nexport const generateSongList = (artistList, api) => {\n    return new Promise(async(resolve, reject) => {\n        const songList = []\n        for (let i = 0; i < artistList.length; i++) {\n            await api.getArtistTopTracks(artistList[i].id, \"US\")\n                .then((topTracks) => {\n                    songList.push(topTracks.tracks[0]);\n                })\n                .catch((err) => reject(err));\n        }\n        resolve(songList);\n    })\n}\n\n//finds whether a given id is in a list of BfsArtist objects\nconst isIn = (id, list) => {\n    return (list.findIndex((elmt) => elmt.id === id) !== -1);\n}\n\n//given a Spotify user access token, creates a playlist for the \n//user from a list of song id's\nexport const generatePlaylist = async(token, songList) => {\n    const api = new SpotifyWebApi();\n    api.setAccessToken(token);\n    const user = await api.getMe();\n    const playlist = await api.createPlaylist(user.id, { name: 'Degrees of Separation', public: false, collaborative: false, description: 'Several degrees of spotify exploration' });\n    await api.addTracksToPlaylist(playlist.id, songList.map((songId) => \"spotify:track:\" + songId));\n    return playlist.id;\n}\n\nexport const generateToken = (authCode) => {\n    return new Promise((resolve, reject) => {\n        fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Basic ' + Buffer.from('d4c2fd522b164d169533cc916f7c5d27:fcd4680273bc464ab3524d0ce93bf654').toString('base64'),\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: new URLSearchParams({\n                grant_type: \"authorization_code\",\n                code: authCode,\n                redirect_uri: \"http://marshallwilson.info/\"\n            })\n        }).then(res => {\n            res.json().then((data) =>\n                resolve(data)\n            )\n        }).catch((e) => {\n            reject(e);\n        })\n    })\n}","// class for storing relevant information about artists during the \n// BFS search process\nclass BfsArtist {\n    constructor(artist, prev, prevCollab) {\n        this.artist = artist;\n        this.prev = prev;\n        this.id = artist.id;\n        this.prevCollab = prevCollab\n    }\n\n    // recursively generates an array containing this artist and its predecessors in order\n    getPredecessors() {\n        if (this.prev === null) {\n            return [this];\n        }\n        let preds = [this];\n        preds = preds.concat(this.prev.getPredecessors());\n        return preds;\n    }\n}\n\nexport default BfsArtist","import React from 'react'\nimport \"../styles/header.css\"\n\n/* Header \n *  Component with title and basic nav links\n *  \"selected\" prop can be \"work\", \"about\", or \"\" and will highlight the \n *  appropriate link \n */\nconst Header = ({selected}) => {\n    return (\n        <header id=\"header\">\n            <h1 id=\"logo\">\n                <a href=\"/#/\">\n                    Marshall Wilson\n                </a>\n            </h1>\n            <nav>\n                {selected === \"work\" ? \n                    <a href=\"/#/\" className=\"nav-links current-link\">work</a>\n                :   <a href=\"/#/\" className=\"nav-links\">work</a>}\n                {selected === \"about\" ? \n                    <a href=\"/#/about\" className=\"nav-links current-link\">about</a>\n                :   <a href=\"/#/about\" className=\"nav-links\">about</a>}\n                \n            </nav>\n        </header>\n    )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/trex.c9512315.jpg\";","export default __webpack_public_path__ + \"static/media/um.fb0c5e73.png\";","export default __webpack_public_path__ + \"static/media/network.082415d4.jpg\";","export default __webpack_public_path__ + \"static/media/colors.5fccc065.png\";","export default __webpack_public_path__ + \"static/media/cat.e40e6155.jpg\";","/* projects.js\n *  exports a list of projects for the project selector on the home page\n *  each project has:\n *      name:   string, title of project in titlecase \n *      types:  list of strings, tags associated with the projects\n *      url:    string, url of project page (route, website, or github link)\n *      image:  imported image file for the thumbnail of the project\n * \n * Note: organic farm name generator and rpn calculator project currently excluded\n */\n\nimport trex from \"../images/trex.jpg\"\nimport um from \"../images/um.png\"\nimport network from \"../images/network.jpg\"\nimport colors from \"../images/colors.png\"\n// import farm from \"../images/farm.jpg\"\nimport cat from \"../images/cat.jpg\"\n// import rpn from \"../images/rpn.jpg\"\n\n\nconst projectConstructor = (name, types, url, image) => {\n    return {\n        name: name,\n        types: types,\n        url: url,\n        image: image\n    }\n}\n\nconst PROJECTS = [\n    projectConstructor(\"Spotify Artist Explorer\", [\"all\", \"javascript\"],\n        \"/#/explorer\", network),\n    projectConstructor(\"Museum Employee Scheduler\", [\"all\", \"python\"],\n        \"https://github.com/Marshall-Wilson/employee_scheduler\", trex),\n    projectConstructor(\"Universal Machine Emulator\", [\"all\", \"c\"],\n        \"https://github.com/Marshall-Wilson/UM-Emulator\", um),\n    projectConstructor(\"Color Picker Animation\", [\"all\", \"javascript\"],\n        \"/#/colors\", colors),\n    // projectConstructor(\"Organic Farm Name Generator\", [\"all\", \"javascript\"],\n    //     \"/generator\", farm),\n    projectConstructor(\"PNM Image Manipulation\", [\"all\", \"c\"],\n        \"https://github.com/Marshall-Wilson/pnm-manipulation\", cat),\n    projectConstructor(\"Musical Collaboration Explorer\", [\"all\", \"c++\"],\n        \"https://github.com/Marshall-Wilson/collaboration-explorer\", network),\n    // projectConstructor(\"RPN Calculator\", [\"all\", \"c\"],\n    //     \"/rpn\", rpn)\n]\n\n\n\nexport default PROJECTS","import React from 'react'\n\n/* ProjectSquare\n *  Individual project component used in ProjectSelector\n *  Takes 1 prop containing a project object (see ../scripts/projects.js)\n */\nconst ProjectSquare = ({project}) => {\n\n    return (\n        <div className=\"project\">\n            <a href={project.url}>\n                <img src={project.image} alt={project.name} />\n                <h3>{project.name}</h3>\n            </a>\n        </div>\n    )\n}\n\nexport default ProjectSquare\n","import React, {useState} from 'react'\nimport PROJECTS from \"../scripts/Projects\"\nimport ProjectSquare from \"./ProjectSquare\"\n\nlet BUTTONS = [{name: \"All\", selected: true}, \n                {name: \"Python\", selected: false},\n                {name: \"JavaScript\", selected: false}, \n                {name: \"C++\", selected: false},\n                {name: \"C\", selected: false}]\n\n\n/* ProjectSelector\n *  Component which creates a gallery of projects from the PROJECTS list and \n *      and a line of buttons from the BUTTONS list. When pressed, each button\n *      filters the projects based on their \"types\" values\n *  Takes no props\n */\nconst ProjectSelector = () => {\n    const [projects, setProjects] = useState(PROJECTS);\n    const [buttons, setButtons] = useState(BUTTONS);\n    \n    const applyFilter = type => {\n        setProjects(PROJECTS.filter(project => project.types.includes(type.toLowerCase())));\n        setButtons(BUTTONS.map((button) => {\n            if (button.name === type) {\n                button.selected = true;\n            } else {\n                button.selected = false;\n            }\n            return button;\n        }))\n    }\n\n    return (\n        <div >\n            \n            <div className={\"selector\"}>\n                {buttons.map((selectorButton) => {\n                            return (\n                                <button className={selectorButton.selected ? \"selected\" : \"\"} \n                                    type=\"button\" \n                                    id={selectorButton.name} \n                                    key={selectorButton.name}\n                                    onClick={() => applyFilter(selectorButton.name)}>\n                                        <h2>{selectorButton.name}</h2>\n                                 </button>\n                            )\n                        }\n                    )\n                }\n            </div>\n            <div className={\"projects\"}>\n                {projects.map((project) => {\n                    return (\n                        <ProjectSquare project={project} key={project.name} />\n                    )\n                }\n                )}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default ProjectSelector\n","import React from 'react'\nimport {Redirect} from 'react-router-dom'\nimport Header from \"../components/Header\"\nimport ProjectSelector from \"../components/ProjectSelector\"\nimport \"../styles/App.css\"\n\nconst MainPage = () => {\n\n    if (window.location.search !== \"\") {\n        return <Redirect to=\"/explorer\" />\n    }\n\n    return (\n        <div id=\"Index\">\n            <Header selected=\"work\"/>\n            <ProjectSelector />\n        </div>\n    )\n}\n\nexport default MainPage\n","/* useInterval.js\n *  implements setInterval in a functional component react-friendly way\n *  Used with permision from https://overreacted.io/\n */\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval","import React, {useState} from 'react'\nimport \"../styles/colors.css\"\nimport useInterval from \"../scripts/useInterval\"\nimport Header from \"../components/Header\"\n\nconst NUMCOLORS = 10;\nconst CHANGEFREQUENCY = 1;\nconst RGBMAX = 250; //rgbMax + any rgbInc value cannot exeed 255\nconst RGBMIN = 50;\nconst FRAMERATE = 75;\n\n/* ColorAnimation\n *  Single page component, which generates a scrolling gradient of colors and \n *      identifies the rgb values of the topmost color in a seperate swatch.\n *  Takes no props \n *  Constants above control the number of breakpoints in the gradient, \n *      how frequently breakpoints change color (1 being every frame), \n *      the maximum rgb value, minimum rgb value, and delay in ms between \n *      iterations respectively\n */\nconst ColorAnimation = () => {\n\n    // Helper Functions\n    const incrementLastColor = colors => {\n        let updatedIncs = rgbIncs;\n        for (const [key] of Object.entries(colors[colors.length - 1])) {\n            colors[colors.length - 1][key] += rgbIncs[key];\n            if (colors[colors.length - 1][key] > RGBMAX || \n                colors[colors.length - 1][key] < RGBMIN) {\n                updatedIncs[key] *= -1\n            }\n        }\n        setIncs(updatedIncs);\n        return colors;\n    }\n    \n    const shiftColors = colors => {\n        colors.push(Object.assign({}, colors[colors.length-1]));\n        colors.shift();\n        return colors;\n    }\n    \n    const makeGradient = (colors) => {\n        let gradient = \"linear-gradient(to bottom right \";\n        for (let i = 0; i < colors.length; i++) {\n            gradient += \", \";\n            gradient += `rgb(${colors[i].r}, ${colors[i].g}, ${colors[i].b})`;\n        }\n        gradient += \")\";\n        return {backgroundImage: gradient};\n    }\n\n    const handleClick = () => {\n        setRunning(!running);\n    }\n\n\n    // State, local vars, and animation step\n    const [colors, setColors] = useState(new Array(NUMCOLORS).fill({r: RGBMIN, g: RGBMAX, b: RGBMIN}));\n    const [gradient, setGradient] = useState(makeGradient(colors));\n    const [rgbIncs, setIncs] = useState({r: 3, g: 4, b: 5});\n    const [frameRule, setFrameRule] = useState(0);\n    const [running, setRunning] = useState(true);\n    \n    useInterval(() => {\n        if (running) {\n            let newColors = shiftColors(colors);\n            if (frameRule % CHANGEFREQUENCY === 0) {\n                newColors = incrementLastColor(newColors);\n            }\n            setFrameRule(frameRule + 1);\n            setColors(newColors);\n            setGradient(makeGradient(colors));\n        }\n    }, FRAMERATE)\n\n\n    return (\n        <div id=\"ColorAnimation\" onClick={handleClick} style={gradient}>\n            <Header />\n            <div id=\"colorInfo\">\n                <div id=\"swatchColor\" style={{background: `rgb(${colors[0].r}, ${colors[0].g}, ${colors[0].b}`}}></div>\n                <h1>Current Color</h1>\n                <h2>R: <span className=\"colorVal\" id=\"rVal\">{colors[0].r}</span></h2>\n                <h2>G: <span className=\"colorVal\" id=\"gVal\">{colors[0].g}</span></h2>\n                <h2>B: <span className=\"colorVal\" id=\"bVal\">{colors[0].b}</span></h2>\n            </div>\n            <footer>\n                <a href=\"/\">Marshall Wilson 2021</a>\n            </footer>\n        </div>\n    )\n}\n\nexport default ColorAnimation\n","export default __webpack_public_path__ + \"static/media/headshot.079f4828.jpeg\";","import React from 'react'\nimport headshot from \"../images/headshot.jpeg\"\n\n\n/* HeadshotFrame\n *  Component containing a polaroid-like frame with a headshot \n *  Takes no props\n */\nconst HeadshotFrame = () => {\n    return (\n        <div className=\"headshotFrame\">\n            <img className=\"headshot\" src={headshot} alt=\"Marshall Wilson\"></img>\n        </div>\n    )\n}\n\nexport default HeadshotFrame\n","export default __webpack_public_path__ + \"static/media/resume.7e6d59ab.pdf\";","import React from 'react'\nimport Header from \"../components/Header\"\nimport HeadshotFrame from \"../components/HeadshotFrame\"\nimport \"../styles/about.css\"\nimport resume from \"../images/resume.pdf\"\n\n/* About.jsx\n *  Full about page component\n *  Takes no props\n */\nconst About = () => {\n\n    let user = \"w.marshall.wilson\";\n    let domain = \"gmail.com\";\n\n    return (\n        <div id=\"about\">\n            <Header selected=\"about\"/>\n            <div className=\"profile\">\n                <HeadshotFrame />\n                <div className=\"blurb\">\n                    <p>Hi! I'm <span>Marshall Wilson</span>, a software engineer who graduated from the Tufts University Computer Science Post-Bac program in August 2021. This site contains some of my personal, professional, and class projects, so feel free to look around.</p>\n                    <p>Prior to my time at Tufts, I studied Biology at Dartmouth College, worked as a science educator and coordinator at the Museum of Science and MIT, and have even been a baker, winemaker, and farmer. I'd love to bring my coding skills and experience to your team!</p>\n                    <p className=\"email\">email: <a href={\"mailto:\" + user + \"@\" + domain}>{user + \"@\" + domain}</a></p>\n                    <div className=\"mediaLinks\">\n                        <a href={resume} download=\"Marshall Wilson Resume.pdf\">Resume</a>\n                        <a href=\"https://github.com/Marshall-Wilson\">GitHub</a>\n                        <a href=\"https://www.linkedin.com/in/w-marshall-wilson/\">LinkedIn</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","/* generator.js\n *  Provides a function to generate a random, plausible orginic farm name\n *  Based on the usda list of registered organic farms in Vermont\n */\n\nconst adjective = [\"Abundant\", \"Sweet\", \"Sunny\", \"Verdant\", \"Good\", \"Kind\",\n    \"Old\", \"New\", \"Peaceful\", \"Stinky\", \"Running\", \"Sentient\", \"Blessed\"\n];\nconst first_word = [\"Acorn\", \"River\", \"Forest\", \"Beauty\", \"Green\",\n    \"Sylvan\", \"Nature\", \"Natural\", \"Freedom\", \"Heart\", \"Bliss\",\n    \"Back\", \"Barred\", \"Bear\", \"Deer\", \"Holly\", \"Cedar\", \"New\", \"Sunshine\",\n    \"Maple\", \"Sweet\", \"Hill\", \"Ridge\", \"Forest\", \"Mountain\", \"Creek\", \"Brook\",\n    \"Ridge\", \"Spring\", \"Great\", \"Good\", \"Kind\", \"Meadow\", \"Glen\", \"Old\"\n];\nconst second_word = [\"Ridge\", \"Field\", \"Horn\", \"Forest\", \"Mountain\", \"Meadow\",\n    \"Run\", \"Hawk\", \"Glen\", \"Road\", \"Lane\", \"Creek\", \"Hill\", \"Brook\", \"Bend\",\n    \"Roots\", \"View\", \"Pond\", \"Sunrise\"\n];\nconst farm_type = [\"Organic Farm\", \"Farm\", \"Dairy\", \"Sugar Shack\", \"Farms\",\n    \"Farm\", \"Farm\", \"Farm\", \"Organic Farm\"\n];\n\n\nconst generateFarmName = () => {\n    let farm_name = \"\";\n    if (Math.random() > 0.6) {\n        farm_name = add_word(farm_name, adjective);\n        if (Math.random() > 0.6) {\n            farm_name = add_word(farm_name, first_word);\n        }\n    } else {\n        farm_name = add_word(farm_name, first_word);\n    }\n\n    farm_name = add_word(farm_name, second_word);\n    farm_name = add_word(farm_name, farm_type);\n    return farm_name;\n}\n\nconst add_word = (farm_name, word_source_a) => {\n    let i = Math.floor(Math.random() * word_source_a.length);\n    if (farm_name.length > 0) {\n        farm_name += \" \";\n    }\n    return farm_name + word_source_a[i];\n}\n\n\nexport default generateFarmName","import React, {useState} from 'react'\nimport \"../styles/generator.css\"\nimport generateFarmName from '../scripts/generator'\nimport Header from \"../components/Header\"\n\n/* FarmNameGenerator\n *  Full page component, which displays a new plausible organic farm name each\n *      time a button is pressed\n *  Currently not linked from main page, but can be accessed at /generator path\n *  Takes no props\n */\nconst FarmNameGenerator = () => {\n\n    const [farmName, setFarmName] = useState(null);\n\n    const clickHandler = () => {\n        setFarmName(generateFarmName());\n    }\n\n    return (\n        <div id=\"generator\">\n            <Header />\n            <h2>Organic Farm Name Generator</h2>\n            <button type=\"button\" onClick={clickHandler}>Generate New Farm Name</button>\n            {farmName ? \n                <div id=\"farm\">\n                    <p id=\"farm_name\">{farmName}</p>\n                </div>\n                : null}\n        </div>\n    )\n}\n\nexport default FarmNameGenerator\n","import React from 'react'\n\n//subcomponent for displaying artist image and name\nconst Artist = ({artistInfo}) => {\n    return (\n        <div id='Artist'>\n            <h2>{artistInfo.name}</h2>\n            {artistInfo.images && artistInfo.images[0] ? \n                <img alt={artistInfo.name} src={artistInfo.images[0].url}/> :\n                null\n            }           \n        </div>\n    )\n}\n\nexport default Artist\n","import React from 'react'\n\n//reduces a list of songs into a single string of ids\nconst songListReducer = (prev, curr) => {\n    return prev + \"-\" + curr.id;\n}\n\n//subcomponent for allowing the user to add a list of songs to their spotify account\n//actual playlist adding is handled on callback to ArtistExplorer component\nconst Playlist = ({songList}) => {\n    const redirectURI = \"http://marshallwilson.info/\"\n    const authEndpoint = \"https://accounts.spotify.com/authorize\";\n    const clientID = \"d4c2fd522b164d169533cc916f7c5d27\";\n    const scopes = [\n        \"user-modify-private\",\n        \"playlist-modify-private\"\n    ];\n    const requestURL = `${authEndpoint}?response_type=code&client_id=${clientID}&redirect_uri=${redirectURI}&state=${songList.reduce(songListReducer, \"\")}&scope=${scopes.join(\"%20\")}&show_dialog=true`\n    \n    return (\n        <div className=\"playlist\">\n            <a className=\"playlist-button\" href={requestURL}>\n                <p>Get The Playlist</p>\n            </a>\n        </div>\n    )\n}\n\nexport default Playlist","import SpotifyWebApi from 'spotify-web-api-js'\nimport React, {useEffect, useState, useRef} from 'react'\nimport {authorize, searchRelated, generateSongList} from '../../scripts/spotifySearch'\nimport Artist from './Artist'\nimport Playlist from './Playlist'\n\n\n// subcomponent of ArtistExplorer\n// executes and displays the artist search process and results\nconst Traverser = ({startName, endName}) => {\n    const [token, setToken] = useState(null); //app access token\n    const [start, setStart] = useState(null); //start artist object\n    const [end, setEnd] = useState(null); //end artist object\n    const [middle, setMiddle] = useState([]); //array of artist objects between start and end in order\n    const [current, setCurrent] = useState(null); //current artist being explored. null if done or not begun\n    const currentRef = useRef(current); //used for referencing current in message hook\n    const [songList, setSongList] = useState([]); // list of songs for results playlist\n    const [message, setMessage] = useState(''); // messages displayed during search\n    const api = new SpotifyWebApi();\n\n    // On load, generate a new token\n    useEffect(() => {\n        authorize().then((data) => setToken(data));\n    }, [])\n\n    // When the token is loaded, find the closest artist to the provided name\n    useEffect(() => {\n        if (token) {\n            api.setAccessToken(token.access_token);\n            api.searchArtists(startName)\n                .then(response => setStart(response.artists.items[0]))\n                .catch(err => alert(\"start not found\"));\n            api.searchArtists(endName)\n                .then(response => setEnd(response.artists.items[0]))\n                .catch(err => alert(\"end not found\"));\n        }\n    }, [token])\n\n    // When start and end artists are found, set periodic messages and begin the search\n    useEffect(() => {\n        if (start && end) {\n            setTimeout(() => {if (currentRef) {setMessage(`Searching for ${end.name} starting with ${start.name}'s related artists`)}}, 3000);\n            setTimeout(() => {if (currentRef) {setMessage(`Artist relations don't always go both ways, so the shortest path from ${start.name} to ${end.name} could be very different from the shortest path from ${end.name} to ${start.name}.`)}}, 15000);\n            setTimeout(() => {if (currentRef) {setMessage(\"The speed of this app is limited by the number of API calls it makes. If your artists are far apart, there could be thousands of other artists to search first.\")}}, 30000);\n            runSearch();\n        }\n    }, [start, end])\n\n    // When the search completes, generate the song list\n    useEffect(() => {\n        if (middle.length > 0) {\n            runSongListGeneration();\n            setMessage('')\n        }\n    }, [middle])\n\n    // Generate a list of songs based on an artist list\n    const runSongListGeneration = async () => {\n        setSongList(await generateSongList(middle, api));\n    }\n\n    // Execute the related artist BFS search \n    const runSearch = async () => {\n        setMiddle(await searchRelated(start, end, api, setCurrent));\n        setMessage('');\n    }\n\n    return (\n        <div className=\"traverser\">\n            <div className=\"search\">\n                { start && end ? //display start and end artist info once loaded\n                    <div className=\"results\">\n                        <Artist artistInfo={start}/>\n                        <hr></hr>\n                        <div className=\"middle-wrapper\">\n                            {current ? //show exploration status while searching\n                                <div id=\"current\">\n                                    <h4>Currently Exploring:</h4>\n                                    <h4>{current.artist.name}</h4>\n                                    { message === '' ? //display periodic messages\n                                        null :\n                                        <p id=\"message\">{message}</p>\n                                    }\n                                </div>:\n                                middle.slice(1, -1).map((artist) => <Artist key={artist.id} artistInfo={artist.artist}/>)}\n                        </div>\n                        <hr></hr>\n                        <Artist artistInfo={end}/>\n                    </div>:\n                    <p>Loading...</p>\n                }\n            </div>\n            {songList.length > 0 ? // Display button for adding playlist once ready\n                <Playlist songList={songList} /> :\n                null\n            }\n        </div>\n    )\n}\n\nexport default Traverser\n\n\n\n","import React from 'react'\n\n// subcomponent containing the input form for the artist search\nconst Input = ({setStartName, setEndName, beginSearching}) => {\n    return (\n        <div className=\"input\">\n            <p>Find the shortest path between two artists</p>\n            <input type=\"text\" placeholder=\"Starting Artist Name\" onChange={(e) => setStartName(e.target.value)}></input>\n            <input type=\"text\" placeholder=\"Ending Artist Name\" onChange={(e) => setEndName(e.target.value)}></input>\n            <button onClick={beginSearching}>Search</button>\n        </div>\n    )\n}\n\nexport default Input\n","import React, { useEffect, useState } from 'react'\nimport { generatePlaylist, generateToken } from '../../scripts/spotifySearch'\nimport Traverser from './Traverser';\nimport Input from './Input';\n\n// Retrieves access token and playlist info from Spotify callback\nconst query = window.location.search\n    .substring(1)\n    .split(\"&\")\n    .reduce(function(initial, item) {\n        if (item) {\n            var parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n    }, {});\n\n// Main component for the spotify artist explorer \nfunction ArtistExplorer() {\n    const [code, setCode] = useState(null); //Spotify access token request code\n    const [startName, setStartName] = useState(''); //starting artist\n    const [endName, setEndName] = useState(''); //ending artist\n    const [searching, setSearching] = useState(false); //whether search is currently happening\n    const [playlistID, setPlaylistID] = useState(null); //stores playlist id once generated\n\n    // On load check hash for access token\n    useEffect(() => {\n        if (query.code && query.state) {\n            setCode(query.code);\n        }\n    }, [])\n\n\n    // If access token and playlist info are available, generate playlist for user\n    useEffect(() => {\n        if (code && query.state) {\n            let songList = query.state.split('-').filter(elmt => elmt !== \"\");\n            console.log(\"getting token\")\n            generateToken(code)\n            .then(res => {\n                console.log(res);\n                generatePlaylist(res.access_token, songList)\n                .then(res => setPlaylistID(res));\n            })\n        }\n    }, [code])\n\n\n    // Click handler for initial input\n    const beginSearch = () => {\n        setSearching(true);\n    }\n\n    return ( \n        <div className = \"artist-explorer\" >\n            {code ? // if user token is available, display post-playlist info\n                <div className='playlist-added'>\n                    <h1> Playlist Added </h1> \n                    <a className='playlist-button' href={`https://open.spotify.com/playlist/${playlistID}`} target='_blank' rel=\"noopener noreferrer\">\n                        <p>Open Spotify?</p>\n                    </a>\n                </div>: \n                searching ? \n                    <Traverser startName={startName} endName={endName}/>:\n                    <Input setStartName={setStartName} setEndName={setEndName} beginSearching={beginSearch}/>\n                \n            } \n        </div>\n    );\n}\n\nexport default ArtistExplorer;","import React from 'react'\n\n//subcomponent containing About page for this app\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <h1>About</h1>\n            <p>This project was meant to translate a <a href=\"https://github.com/Marshall-Wilson/collaboration-explorer\">\n                previous C++ project</a>,\n             which explored pre-establishes networks of artists and collaborations,\n              into the real world by incorporating the Spotify API</p>\n            <p>The app implements a breadth-first search of Spotify's related artists\n                 feature, searching first through the related artists of the starting\n                 artist, then through those artists' related artists, and so on\n                 until it finds the ending artist.\n            </p>\n            <p>Due to the Spotify API's rate limiting and the average API response time,\n                the current version of this app has a hard time dealing with artists\n                more than a few steps apart. If you're just looking to try out the\n                app, I recommend using artists in similar genres, well-known artists,\n                or some of the suggestions below.\n            </p>\n            <ul>\n                <li><strong>Hozier to Iron and Wine</strong>: <p>⁃ 2 steps, 1 second</p></li>\n                <li><strong>Joni Mitchell to Bob Dylan</strong>: <p>⁃ 3 steps, 6 seconds</p></li>\n                <li><strong>Dolly Parton to Chicago</strong>: <p>⁃ 4 steps, 30 seconds</p></li>\n                <li><strong>Carly Rae Jepsen to Nicki Minaj</strong>: <p>⁃ 5 steps, 3 minutes</p></li>\n                <li><strong>Frank Sinatra to Kermit the Frog</strong>: <p>⁃ 7 steps, 7 minutes</p></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\n//explorer nav bar\nconst Nav = ({clickHandler}) => {\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\"><h1>Spotify Artist Explorer</h1></Link>\n            <div className=\"nav-links\">\n                <h2 onClick={() => clickHandler('main')}>Main</h2>\n                <h2 onClick={() => clickHandler('about')}>About</h2>\n            </div>\n        </div>\n    )\n}\n\nexport default Nav\n","import React, {useState} from 'react'\nimport '../styles/ArtistExplorer.css';\nimport ArtistExplorer from '../components/explorer/ArtistExplorer'\nimport About from '../components/explorer/About'\nimport Nav from '../components/explorer/Nav'\n\nconst ExplorerContainer = () => {\n    const [page, setPage] = useState('main');\n\n    // Sets the current page choice. 'main' or invalid choices refresh page to base state\n    const newPageChoice = (name) => {\n        setPage(name);\n    }\n\n    const GetPage = ({code, trackString}) => {\n        if (page === 'main') {\n            return <ArtistExplorer />\n        } else if (page === 'about') {\n            return <About />\n        } else {\n            return <p>Error: Please Reload Page</p>\n        }\n    }\n\n    return (\n        <div className=\"explorer-container\">\n            <Nav clickHandler={newPageChoice}/>\n            <GetPage />\n            <footer>\n                <p> Marshall Wilson 2021 | <a href = \"http://www.marshallwilson.info\" > www.marshallwilson.info </a></p>\n            </footer> \n        </div>\n    )\n}\n\nexport default ExplorerContainer\n","import {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\"\nimport ColorAnimation from \"./pages/ColorAnimation\"\nimport About from \"./pages/About\"\nimport FarmNameGenerator from \"./pages/FarmNameGenerator\";\nimport ExplorerContainer from \"./pages/ExplorerContainer\"\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} /> \n        <Route exact path=\"/colors\" component={ColorAnimation} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/generator\" component={FarmNameGenerator} />\n        <Route exact path=\"/explorer\" component={ExplorerContainer} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}